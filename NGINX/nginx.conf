# TODO configure nginx as a reverse proxy for the api


# a fun idea to execute the js code from nginx and return the response, elimating the need for express.
# # Define the user and group that NGINX will run as
# user www-data;
# worker_processes auto;
# pid /run/nginx.pid;
# include /etc/nginx/modules-enabled/*.conf;

# events {
#     worker_connections 768;
#     # multi_accept on;
# }

# http {
#     # Basic settings
#     sendfile on;
#     tcp_nopush on;
#     tcp_nodelay on;
#     keepalive_timeout 65;
#     types_hash_max_size 2048;

#     # Include MIME types
#     include /etc/nginx/mime.types;
#     default_type application/octet-stream;

#     # Logging settings
#     access_log /var/log/nginx/access.log;
#     error_log /var/log/nginx/error.log;

#     # Enable gzip compression
#     gzip on;
#     gzip_vary on;
#     gzip_proxied any;
#     gzip_comp_level 6;
#     gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

#     # Load the ngx_http_js_module
#     js_path /etc/nginx/njs/;
#     js_import main from main.js;

#     server {
#         listen 80;
#         server_name example.com;

#         # Use JavaScript for handling requests
#         location / {
#             js_content main.hello;
#         }

#         # Example of using JavaScript for subrequests
#         location /subrequest {
#             js_content main.subrequest;
#         }
#     }
# }