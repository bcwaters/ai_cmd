{"id":"56e54097-2cf4-4a6f-a134-892197aae2d5","object":"chat.completion","created":1740684748,"model":"grok-2-1212","choices":[{"index":0,"message":{"role":"assistant","content":"# Data Structures in JavaScript\n\nHere is a list of common data structures you can use in JavaScript:\n\n1. **Arrays**\n   - Ordered lists of values, indexed by integers starting at 0.\n   - Example: `let fruits = ['apple', 'banana', 'orange'];`\n\n2. **Objects**\n   - Collections of key-value pairs, where keys are strings or symbols.\n   - Example: `let person = {name: 'John', age: 30};`\n\n3. **Sets**\n   - Collections of unique values, without any particular order.\n   - Example: `let uniqueNumbers = new Set([1, 2, 3, 3, 4]);`\n\n4. **Maps**\n   - Collections of key-value pairs where keys can be any value (including objects).\n   - Example: `let userRoles = new Map([['user1', 'admin'], ['user2', 'user']]);`\n\n5. **Stacks**\n   - Last-In-First-Out (LIFO) data structure, often implemented using arrays.\n   - Example: \n     ```javascript\n     let stack = [];\n     stack.push('item1');\n     stack.push('item2');\n     let lastItem = stack.pop();\n     ```\n\n6. **Queues**\n   - First-In-First-Out (FIFO) data structure, can be implemented using arrays or a dedicated `Queue` class.\n   - Example:\n     ```javascript\n     let queue = [];\n     queue.push('item1');\n     queue.push('item2');\n     let firstItem = queue.shift();\n     ```\n\n7. **Linked Lists**\n   - Linear data structures where elements are stored in nodes connected by pointers.\n   - Example:\n     ```javascript\n     class Node {\n       constructor(data) {\n         this.data = data;\n         this.next = null;\n       }\n     }\n     let head = new Node(1);\n     head.next = new Node(2);\n     ```\n\n8. **Trees**\n   - Hierarchical data structures with a root node and subtrees of children nodes.\n   - Example:\n     ```javascript\n     class TreeNode {\n       constructor(value) {\n         this.value = value;\n         this.children = [];\n       }\n       addChild(child) {\n         this.children.push(child);\n       }\n     }\n     let root = new TreeNode('A');\n     let childB = new TreeNode('B');\n     root.addChild(childB);\n     ```\n\n9. **Graphs**\n   - Non-linear data structures consisting of nodes and edges.\n   - Example:\n     ```javascript\n     class Graph {\n       constructor() {\n         this.nodes = new Map();\n       }\n       addNode(node) {\n         this.nodes.set(node, []);\n       }\n       addEdge(node1, node2) {\n         this.nodes.get(node1).push(node2);\n         this.nodes.get(node2).push(node1);\n       }\n     }\n     let graph = new Graph();\n     graph.addNode('A');\n     graph.addNode('B');\n     graph.addEdge('A', 'B');\n     ```\n\n10. **Heaps**\n    - Specialized tree-based data structures that satisfy the heap property.\n    - Example:\n      ```javascript\n      class MaxHeap {\n        constructor() {\n          this.heap = [];\n        }\n        insert(value) {\n          this.heap.push(value);\n          this.bubbleUp();\n        }\n        bubbleUp() {\n          let index = this.heap.length - 1;\n          while (index > 0) {\n            let parentIndex = Math.floor((index - 1) / 2);\n            if (this.heap[parentIndex] >= this.heap[index]) break;\n            [this.heap[parentIndex], this.heap[index]] = [this.heap[index], this.heap[parentIndex]];\n            index = parentIndex;\n          }\n        }\n      }\n      let maxHeap = new MaxHeap();\n      maxHeap.insert(3);\n      maxHeap.insert(1);\n      maxHeap.insert(4);\n      ```\n\nThese data structures form the foundation for many algorithms and applications in JavaScript programming.\n\n@EOF@\n[JavaScript, data structures, arrays, objects, sets, maps, stacks, queues, linked lists, trees, graphs, heaps, programming, algorithms]","refusal":null},"finish_reason":"stop"}],"usage":{"prompt_tokens":554,"completion_tokens":869,"total_tokens":1423,"prompt_tokens_details":{"text_tokens":554,"audio_tokens":0,"image_tokens":0,"cached_tokens":0}},"system_fingerprint":"fp_5c0c5bd9d9"}