{"id":"b91ca6b3-9d31-41fb-8544-4edeff1e1ce3","object":"chat.completion","created":1741220523,"model":"grok-2-1212","choices":[{"index":0,"message":{"role":"assistant","content":"Here's an example of a simple feedforward neural network using TensorFlow.js:\n\n```javascript\nimport * as tf from '@tensorflow/tfjs';\n\n// Define the model architecture\nconst model = tf.sequential();\nmodel.add(tf.layers.dense({units: 10, activation: 'relu', inputShape: [784]}));\nmodel.add(tf.layers.dense({units: 10, activation: 'softmax'}));\n\n// Compile the model\nmodel.compile({optimizer: 'sgd', loss: 'categoricalCrossentropy', metrics: ['accuracy']});\n\n// Train the model\nasync function train(data, labels) {\n    await model.fit(data, labels, {\n        epochs: 100,\n        callbacks: {\n            onEpochEnd: (epoch, logs) => {\n                console.log(`Epoch ${epoch}: loss = ${logs.loss}`);\n            }\n        }\n    });\n}\n\n// Make predictions\nasync function predict(input) {\n    const prediction = await model.predict(input);\n    return prediction;\n}\n```\n\nThis example demonstrates how to create, compile, train, and use a simple feedforward neural network using TensorFlow.js.\n\n@EOF@\n\n[TensorFlow.js, neural networks, feedforward, model architecture, training, prediction]","refusal":null},"finish_reason":"stop"}],"usage":{"prompt_tokens":885,"completion_tokens":253,"reasoning_tokens":0,"total_tokens":1138,"prompt_tokens_details":{"text_tokens":885,"audio_tokens":0,"image_tokens":0,"cached_tokens":0}},"system_fingerprint":"fp_5c0c5bd9d9"}